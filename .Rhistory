data=subdat, slab=as.character(obsID),
method='REML')
res.studytype[[i]]<- rma.mv(yi, vi,
mods= ~factor(studyType),
random= ~1 | paperID/obsID,
data=subdat, slab=as.character(obsID),
method='REML')
res.Nfix[[i]]<- rma.mv(yi, vi,
mods= ~factor(Nfix),
random= ~1 | paperID/obsID,
data=subdat, slab=as.character(obsID),
method='REML')
print(paste(i, 'of', length(MEASCAT)))
}
names(res)<-MEASCAT
names(res.quality)<-MEASCAT
names(res.ecosyst)<-MEASCAT
names(res.studytype)<-MEASCAT
names(res.Nfix)<-MEASCAT
#Test whether inclusion of any of these moderators are warrented
ANOVAParams<-function(fullMod, reducedMod){
#do anova comparison
#anova.comp<-anova(fullMod,reducedMod)
QM<-fullMod$QM
QMp<-fullMod$QMp
#manually calculate the pseudo R2 values
#compute the proportional reduction in the variance components as a sort of pseudo R-squared value
pseudoR2.1<-(reducedMod$sigma2[1] - fullMod$sigma2[1]) / reducedMod$sigma2[1]
pseudoR2.2<-(reducedMod$sigma2[2] - fullMod$sigma2[2]) / reducedMod$sigma2[2]
pseudoR2.perc<-(sum(reducedMod$sigma2) - sum(fullMod$sigma2)) / sum(reducedMod$sigma2)
anova.comp.df<-data.frame(QM=round(QM, digits=3),
QMp=round(QMp, digits=3),
pseudoR2.1=round(pseudoR2.1, digits=3), #pseudo R2 for the 1st sigma2
pseudoR2.2=round(pseudoR2.2, digits=3), #pseudo R2 for the 2nd sigma2
pseudoR2.perc=round(pseudoR2.perc, digits=3)
)
#   #put everything in a table
#   anova.comp.df<-data.frame(p.f=anova.comp$p.f, #number of parameters in the full model
#                             LRT=round(anova.comp$LRT, digits=3), #likelihood ratio statistic
#                             pval=round(anova.comp$pval, digits=3), #p-value for the likelihood ratio test
#                             pseudoR2.1=round(pseudoR2.1, digits=3), #pseudo R2 for the 1st sigma2
#                             pseudoR2.2=round(pseudoR2.2, digits=3), #pseudo R2 for the 2nd sigma2
#                             pseudoR2.perc=round(pseudoR2.perc, digits=3) #the proportional reduction in the total variance
#)
return(anova.comp.df)
}
i<-0
tmp.list<-list()
for(i in 1:length(MEASCAT)){
#   #reduced model parameters
#   p.r<-anova(res.quality[[i]], res[[i]])$p.r
#full vs reduced model anova and extract params
qualityA<-ANOVAParams(fullMod=res.quality[[i]], reducedMod=res[[i]])
ecosystA<-ANOVAParams(fullMod=res.ecosyst[[i]], reducedMod=res[[i]])
studytypeA<-ANOVAParams(fullMod=res.studytype[[i]], reducedMod=res[[i]])
NfixA<-ANOVAParams(fullMod=res.Nfix[[i]], reducedMod=res[[i]])
tmpdf<-rbind(qualityA, ecosystA, studytypeA, NfixA) #same anova params in a dataframe
anovaLabels<-c('qualityA','ecosystA','studytypeA','NfixA') #name all the rows
#   #add a column to hold the reduced model information
#   p.rCol<-rep(p.r, dim(tmpdf)[1])
#save df
tmp.list[[i]]<-data.frame(anovaLabels, tmpdf)
}
names(tmp.list)<-MEASCAT
anovaMods<-ldply(tmp.list)
anovaMods
newfilename<-'anovaMods.txt'
write.table(anovaMods, file=paste(figuresPath,'modForests',newfilename, sep='/'), sep='\t')
currMeasFac<-anovaMods[anovaMods$anovaLabels=='studytypeA' & anovaMods$QMp < 0.05,'.id']
currMeasFac
#Run post-hoc comparisions among Study type levels, pull out means and CI
i<-0
posthoc.list<-list()
pred.list<-list()
for(i in 1:length(currMeasFac)){
#1. calc posthoc pvals
posthocR<-anova(res.studytype[[currMeasFac[i]]],
L=rbind(c(1,-1,0,0), #fs vs ea
c(1,0,-1,0), #fs vs er
c(1,0,0,-1), #fs vs gh
c(0,1,-1,0), #ea vs er
c(0,1,0,-1), #ea vs gh
c(0,0,1,-1)  #er vs gh
))
levelcomp<-c('fs_ea','fs_er','fs_gh','ea_er','ea_gh','er_gh')
posthoc.list[[i]]<-data.frame(levelcomp, pval=round(posthocR$pval, digits=4))
#2. calc predicted values by level
predR<-predict(res.studytype[[currMeasFac[i]]])
tmp<-data.frame(obsID=predR$slab, pred=predR$pred,
cilb=predR$ci.lb, ciub=predR$ci.ub, se=predR$se)
ind.studyType<-ddply(dat.tmp, ~obsID, summarize, studyType1=unique(studyType))
tmp1<-merge(tmp, ind.studyType)
tmp2<-ddply(tmp1, ~studyType1, summarize,
pred = unique(pred),
cilb = unique(cilb),
ciub = unique(ciub),
se = unique(se),
k = length(obsID))
pred.list[[i]]<-tmp2
}
names(posthoc.list)<-currMeasFac
posthocR<-ldply(posthoc.list)
posthocR
names(pred.list)<-currMeasFac
predR<-ldply(pred.list)
predR
#update effect size table for plotting
colnames(predR)[1]<-'MeasFac'
selectMeas<-unique(predR$MeasFac)
MeasFacl<-rev(levels(factor(MEASCAT[MEASCAT %in% selectMeas], levels=MEASCAT[MEASCAT %in% selectMeas])))
MeasNamesl<-rev(measTab[measTab$MEASCAT %in% selectMeas,'labels'])
colnames(predR)[2]<-'CAT'
CAT<-levels(dat$studyType)
predR$y<-NA
i<-0
for(i in 1:length(MeasFacl)){
predR[predR$CAT==CAT[1] & predR$MeasFac==MeasFacl[i],'y']<-i+0.3
predR[predR$CAT==CAT[2] & predR$MeasFac==MeasFacl[i],'y']<-i+0.1
predR[predR$CAT==CAT[3] & predR$MeasFac==MeasFacl[i],'y']<-i-0.1
predR[predR$CAT==CAT[4] & predR$MeasFac==MeasFacl[i],'y']<-i-0.3
}
predR
#assign post-hoc letters (order:field study, expt addition, expt removl, gh)
#subset(posthocR, .id=='biom')
phTno<-c('a','b','b','b')
phTsom<-c('a','ab','ab','b')
predR$posthocL<-c(phTno,phTsom)
#assign pretty names and symbols
faclimits<-rev(c('Greenhouse study',
'Field removal',
'Field addition',
'Field observation'))
facShapes<-c(16,17,15,18)
predR$annLabel<-paste(predR$posthocL, ' (',predR$k,')', sep='')
#ggplot
predR1<-predR #get rid of the CIs for a level with only 1 data point
predR1[predR1$MeasFac == 'som' & predR1$CAT == 'field expt addition',c('cilb','ciub')]<-NA
stud.sp<-ggplot(data=predR1,aes(x=pred,y=y, shape=CAT, label=annLabel)) +
geom_point(aes(shape=CAT),size=2) +
geom_errorbarh(aes(xmin=cilb,xmax=ciub), height=0)+
geom_vline(xintercept=0,linetype="dashed") + mytheme +
xlab('Std. Mean Diff. (Inv-Ref)') + ylab('') +
scale_y_continuous(breaks=c(1,2),labels=MeasNamesl) +
scale_shape_manual(name="Study design",
labels=faclimits,
values=facShapes)+
geom_text(aes(x=ciub, y=y, hjust=-0.3, vjust=0.5),size=2.2,show_guide = FALSE) +
annotate("text", x=1, y=1.1, label=' (1)', size=2.2)+ #manually add the posthoc letters and k here
scale_x_continuous(expand=c(0,0), limits=c(-1.5,5.3)) +
theme(legend.title=element_text(size=8))
stud.sp
#theme(axis.text.y=element_text(angle=90, hjust=0.5, size=10))
newfilename<-"studytypeForest.pdf"
pdf(paste(figuresPath,'modForests',newfilename, sep='/'), width = fig.width*1.8, height = fig.height*1)
stud.sp
dev.off()
currMeasFac<-anovaMods[anovaMods$anovaLabels=='NfixA' & anovaMods$QMp < 0.05,'.id']
currMeasFac
#levels(dat.tmp$Nfix) #check to make sure that this lines up with the way I organized the contrasts
#Run post-hoc comparisions among Nfix levels, pull out means and CI
i<-0
posthoc.list<-list()
pred.list<-list()
for(i in 1:length(currMeasFac)){
#1. calc posthoc pvals
posthocR<-anova(res.Nfix[[currMeasFac[i]]],
L=rbind(c(1,-1,0,0), #I-R- vs I-R+
c(1,0,-1,0), #I-R- vs I+R-
c(1,0,0,-1), #I-R- vs I+R+
c(0,1,-1,0), #I-R+ vs I+R-
c(0,1,0,-1), #I-R+ vs I+R+
c(0,0,1,-1)  #I+R- vs I+R+
))
levelcomp<-c('none_r','none_i','none_both','r_i','r_both','i_both')
posthoc.list[[i]]<-data.frame(levelcomp, pval=round(posthocR$pval, digits=4))
#2. calc predicted values by level
predR<-predict(res.Nfix[[currMeasFac[i]]])
tmp<-data.frame(obsID=predR$slab, pred=predR$pred, cilb=predR$ci.lb, ciub=predR$ci.ub, se=predR$se)
ind.Fac<-ddply(dat.tmp, ~obsID, summarize, Level=unique(Nfix))
tmp1<-merge(tmp, ind.Fac)
tmp2<-ddply(tmp1, ~Level, summarize,
pred = unique(pred),
cilb = unique(cilb),
ciub = unique(ciub),
se = unique(se),
k = length(obsID))
pred.list[[i]]<-tmp2
}
names(posthoc.list)<-currMeasFac
posthocR<-ldply(posthoc.list)
posthocR
names(pred.list)<-currMeasFac
predR<-ldply(pred.list)
predR
#update effect size table for plotting
colnames(predR)[1]<-'MeasFac'
selectMeas<-unique(predR$MeasFac)
MeasFacl<-rev(levels(factor(MEASCAT[MEASCAT %in% selectMeas], levels=MEASCAT[MEASCAT %in% selectMeas])))
MeasNamesl<-rev(measTab[measTab$MEASCAT %in% selectMeas,'labels'])
colnames(predR)[2]<-'CAT'
CAT<-levels(dat$Nfix)
predR$y<-NA
i<-0
for(i in 1:length(MeasFacl)){
predR[predR$CAT==CAT[1] & predR$MeasFac==MeasFacl[i],'y']<-i+0.3
predR[predR$CAT==CAT[2] & predR$MeasFac==MeasFacl[i],'y']<-i+0.1
predR[predR$CAT==CAT[3] & predR$MeasFac==MeasFacl[i],'y']<-i-0.1
predR[predR$CAT==CAT[4] & predR$MeasFac==MeasFacl[i],'y']<-i-0.3
}
predR
#assign post-hoc letters (order:field study, expt addition, expt removl, gh)
#subset(posthocR, .id=='litterbiom')
phTtoti<-c('b','a','b','ab')
phTsoiln<-c('a','ab','b','ab')
phTsoilcn<-c('a','b','a','a')
predR$posthocL<-c(phTtoti,phTsoiln, phTsoilcn)
#assign pretty names and symbols
faclimits<-unique(predR$CAT)
facShapes<-c(16,17,15,18)
predR$annLabel<-paste(predR$posthocL, ' (',predR$k,')', sep='')
#ggplot
faclimits_new<-c('No N-fixers','Ref. community N-fixers only','Invasive sp. N-fixers only','Ref. and inv. sp. N-fixers')
nfix.sp<-ggplot(data=predR,aes(x=pred,y=y, shape=CAT,label=annLabel)) +
geom_point(aes(shape=CAT),size=3) +
geom_errorbarh(aes(xmin=cilb,xmax=ciub), height=0)+
geom_vline(xintercept=0,linetype="dashed") + mytheme +
xlab('Std. Mean Diff. (Inv-Ref)') + ylab('') +
scale_y_continuous(breaks=seq(1,length(MeasFacl)),
labels=MeasNamesl) +
scale_shape_manual(name="N-fixing status",
labels=faclimits_new,
values=facShapes)+
geom_text(aes(x=ciub, y=y, hjust=-0.3, vjust=0.5),size=2.2,show_guide = FALSE) +
scale_x_continuous(expand=c(0,0), limits=c(-1.3,2.3))+
theme(legend.title=element_text(size=8))
nfix.sp
#theme(axis.text.y=element_text(angle=90, hjust=0.5, size=10))
newfilename<-"nfixForest.pdf"
pdf(paste(figuresPath,'modForests',newfilename, sep='/'), width = fig.width*2, height = fig.height*1.5)
nfix.sp
dev.off()
currMeasFac<-anovaMods[anovaMods$anovaLabels=='qualityA' & anovaMods$pval < 0.05,'.id']
currMeasFac
currMeasFac<-anovaMods[anovaMods$anovaLabels=='ecosystA' & anovaMods$pval < 0.05,'.id']
currMeasFac
INVlist<-FitPlot(dat, k=1, qualColumn='InvSpInvArea_qualRank', colorN=5)
NATlist<-FitPlot(dat, k=2, qualColumn='NatArea_qualRank', colorN=5)
DIFF2list<-FitPlot(dat, k=4, qualColumn='CWMDiff2_qualRank', colorN=10)
source('CODE/metaAnalysis/fxn_FitPlot_Nfix.R')
INVlist_Nfix<-FitPlot_Nfix(dat, k=1, nfixColumn='Nfix')
DIFFlist_Nfix<-FitPlot_Nfix(dat, k=3, nfixColumn='Nfix')
DIFF2list_Nfix<-FitPlot_Nfix(dat, k=4, nfixColumn='Nfix')
INVtab<-rbind(ldply(INVlist[['results']][['percN']]),
ldply(INVlist[['results']][['litterpercN']]),
ldply(INVlist[['results']][['cn']]),
ldply(INVlist[['results']][['littercn']]))[,-1]
NATtab<-rbind(ldply(NATlist[['results']][['percN']]),
ldply(NATlist[['results']][['litterpercN']]),
ldply(NATlist[['results']][['cn']]),
ldply(NATlist[['results']][['littercn']]))[,-1]
DIFFtab<-rbind(ldply(DIFFlist[['results']][['percN']]),
ldply(DIFFlist[['results']][['litterpercN']]),
ldply(DIFFlist[['results']][['cn']]),
ldply(DIFFlist[['results']][['littercn']]))[,-1]
DIFF2tab<-rbind(ldply(DIFF2list[['results']][['percN']]),
ldply(DIFF2list[['results']][['litterpercN']]),
ldply(DIFF2list[['results']][['cn']]),
ldply(DIFF2list[['results']][['littercn']]))[,-1]
newfilename<-'INVtab.txt'
write.table(INVtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'NATtab.txt'
write.table(NATtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'DIFFtab.txt'
write.table(DIFFtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'DIFF2tab.txt'
write.table(DIFF2tab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
INVtab[INVtab$pVal <0.1 & INVtab$measType %in% MEASCAT,]
INVlist[['qual']][['percN']][['soiln']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
INVlist[['qual']][['percN']][['soilcn']]
INVlist[['qual']][['litterpercN']][['soilcn']]
NATtab[NATtab$pVal <0.1 & NATtab$measType %in% MEASCAT,]
NATlist[['qual']][['cn']][['nminz']]
NATlist[['qual']][['cn']][['soilcn']]
DIFFtab[DIFFtab$pVal <0.1 & DIFFtab$measType %in% MEASCAT,]
DIFFlist[['qual']][['litterpercN']][['nh']]
DIFFlist[['qual']][['litterpercN']][['toti']]
DIFFlist[['qual']][['cn']][['toti']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
DIFFlist[['qual']][['cn']][['nminz']]
DIFFlist[['qual']][['cn']][['soilcn']]
DIFFlist[['qual']][['littercn']][['nh']]
DIFFlist[['qual']][['littercn']][['toti']]
DIFFlist[['qual']][['littercn']][['nminz']]
DIFF2tab[DIFF2tab$pVal <0.1 & DIFF2tab$measType %in% MEASCAT,]
DIFF2list[['qual']][['percN']][['nh']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
DIFF2list[['qual']][['litterpercN']][['soilcn']]
DIFF2list[['qual']][['cn']][['nh']] # trait quality has a influence - studies with low quality trait data tend to have higher ESs
DIFF2list[['qual']][['cn']][['nminz']]
DIFF2list[['qual']][['cn']][['soilcn']]
DIFF2list[['qual']][['littercn']][['nh']]
DIFF2list[['qual']][['littercn']][['toti']]
DIFFlist<-FitPlot(dat, k=3, qualColumn='CWMDiff_qualRank', colorN=10)
INVtab<-rbind(ldply(INVlist[['results']][['percN']]),
ldply(INVlist[['results']][['litterpercN']]),
ldply(INVlist[['results']][['cn']]),
ldply(INVlist[['results']][['littercn']]))[,-1]
NATtab<-rbind(ldply(NATlist[['results']][['percN']]),
ldply(NATlist[['results']][['litterpercN']]),
ldply(NATlist[['results']][['cn']]),
ldply(NATlist[['results']][['littercn']]))[,-1]
DIFFtab<-rbind(ldply(DIFFlist[['results']][['percN']]),
ldply(DIFFlist[['results']][['litterpercN']]),
ldply(DIFFlist[['results']][['cn']]),
ldply(DIFFlist[['results']][['littercn']]))[,-1]
DIFF2tab<-rbind(ldply(DIFF2list[['results']][['percN']]),
ldply(DIFF2list[['results']][['litterpercN']]),
ldply(DIFF2list[['results']][['cn']]),
ldply(DIFF2list[['results']][['littercn']]))[,-1]
newfilename<-'INVtab.txt'
write.table(INVtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'NATtab.txt'
write.table(NATtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'DIFFtab.txt'
write.table(DIFFtab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
newfilename<-'DIFF2tab.txt'
write.table(DIFF2tab, file=paste(figuresPath,'allRegressionTable',newfilename, sep='/'), sep='\t', row.names=FALSE)
INVtab[INVtab$pVal <0.1 & INVtab$measType %in% MEASCAT,]
INVlist[['qual']][['percN']][['soiln']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
INVlist[['qual']][['percN']][['soilcn']]
INVlist[['qual']][['litterpercN']][['soilcn']]
NATtab[NATtab$pVal <0.1 & NATtab$measType %in% MEASCAT,]
NATlist[['qual']][['cn']][['nminz']]
NATlist[['qual']][['cn']][['soilcn']]
DIFFtab[DIFFtab$pVal <0.1 & DIFFtab$measType %in% MEASCAT,]
DIFFlist[['qual']][['litterpercN']][['nh']]
DIFFlist[['qual']][['litterpercN']][['toti']]
DIFFlist[['qual']][['cn']][['toti']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
DIFFlist[['qual']][['cn']][['nminz']]
DIFFlist[['qual']][['cn']][['soilcn']]
DIFFlist[['qual']][['littercn']][['nh']]
DIFFlist[['qual']][['littercn']][['toti']]
DIFFlist[['qual']][['littercn']][['nminz']]
DIFF2tab[DIFF2tab$pVal <0.1 & DIFF2tab$measType %in% MEASCAT,]
DIFF2list[['qual']][['percN']][['nh']] #trait quality has a marginal influence - studies with low quality trait data tend to have higher ESs
DIFF2list[['qual']][['litterpercN']][['soilcn']]
DIFF2list[['qual']][['cn']][['nh']] # trait quality has a influence - studies with low quality trait data tend to have higher ESs
DIFF2list[['qual']][['cn']][['nminz']]
DIFF2list[['qual']][['cn']][['soilcn']]
DIFF2list[['qual']][['littercn']][['nh']]
DIFF2list[['qual']][['littercn']][['toti']]
INVlist1<-AddPanelTitles(INVlist)
NATlist1<-AddPanelTitles(NATlist)
DIFFlist1<-AddPanelTitles(DIFFlist)
DIFF2list1<-AddPanelTitles(DIFF2list)
#plot and save
PLANTlist<-list(INVlist1, NATlist1, DIFFlist1, DIFF2list1)
PLANTlabel<-c('INV','NAT','DIFF','DIFF2')
xlabel.PlantText<-c('Invasive species','Reference area','Invaded - Reference area','Inv Sp. - Reference area')
xlabel.TraitText<-c('Leaf %N','Litter %N','Leaf C:N','Litter C:N')
l<-0
for(l in 1:length(PLANTlist)){
i<-0
for (i in 1:length(TRAIT)){
CURRTRAIT<-PLANTlist[[l]][[i]]
xlabel<- textGrob(paste(xlabel.PlantText[l],xlabel.TraitText[i], sep=", "), x=0.5,
y=unit(1,'lines'))
#open image file connection
newfilename<-paste(paste(PLANTlabel[l],TRAIT[i], sep="_"),'.png',sep="")
png(paste(figuresPath,'allRegressionPlots',newfilename, sep='/'), units='in',
width = fig.width*3.5, height = fig.height*3.5, res=fig.res)
grid.arrange(
textGrob('Std. Mean Diff. (Inv-Ref)', y=0.5,x=unit(1,'lines'), rot=90), # ylabel topleft
do.call(arrangeGrob,  CURRTRAIT),
textGrob(" "), #bottom left
xlabel, #bottom right
widths = unit.c(unit(2.5, "lines"), unit(1, "npc") - unit(2.5, "lines")),
heights = unit.c(unit(1, "npc") - unit(2.5, "lines"), unit(2.5, "lines")),
nrow=2, ncol=2
)
dev.off()
}
PLANTlist<-list(INVlist1, NATlist1, DIFFlist1, DIFF2list1)
PLANTlabel<-c('INV','NAT','DIFF','DIFF2')
xlabel.PlantText<-c('Invasive species','Reference area','Invaded - Reference area','Inv Sp. - Reference area')
xlabel.TraitText<-c('Leaf %N','Litter %N','Leaf C:N','Litter C:N')
l<-0
for(l in 1:length(PLANTlist)){
i<-0
for (i in 1:length(TRAIT)){
CURRTRAIT<-PLANTlist[[l]][[i]]
xlabel<- textGrob(paste(xlabel.PlantText[l],xlabel.TraitText[i], sep=", "), x=0.5,
y=unit(1,'lines'))
#open image file connection
newfilename<-paste(paste(PLANTlabel[l],TRAIT[i], sep="_"),'.pdf',sep="")
pdf(paste(figuresPath,'allRegressionPlots',newfilename, sep='/'),
width = fig.width*3.5, height = fig.height*3.5)
grid.arrange(
textGrob('Std. Mean Diff. (Inv-Ref)', y=0.5,x=unit(1,'lines'), rot=90), # ylabel topleft
do.call(arrangeGrob,  CURRTRAIT),
textGrob(" "), #bottom left
xlabel, #bottom right
widths = unit.c(unit(2.5, "lines"), unit(1, "npc") - unit(2.5, "lines")),
heights = unit.c(unit(1, "npc") - unit(2.5, "lines"), unit(2.5, "lines")),
nrow=2, ncol=2
)
dev.off()
}
newfilename<-"INVreg.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width, height = fig.height)
INVlist[['figures']][['percN']][['soiln']] +
xlab('Invasive sp. Leaf %N') + ylab('Soil N effect size')
dev.off()
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*1.75, height = fig.height)
INVlist_Nfix[['figures']][['percN']][['soiln']] +
xlab('Invasive sp. Leaf %N') + ylab('Soil N effect size')
dev.off()
newfilename<-"INVreg_Nfix.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*1.75, height = fig.height)
INVlist_Nfix[['figures']][['percN']][['soiln']] +
xlab('Invasive sp. Leaf %N') + ylab('Soil N effect size')
dev.off()
newfilename<-"DIFFreg.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*2, height = fig.height*2)
grid.arrange(
DIFFlist[['figures']][['litterpercN']][['toti']] +
xlab('Inv.-Ref. CWM litter %N') + ylab('Total inorg. N effect size') + ggtitle('a'),
DIFFlist[['figures']][['littercn']][['toti']] +
xlab('Inv.-Ref. CWM litter C:N') + ylab('Total inorg. N effect size') + ggtitle('b'),
DIFFlist[['figures']][['cn']][['nminz']] +
xlab('Inv.-Ref. CWM leaf C:N') + ylab('Mineralization effect size') + ggtitle('c'),
DIFFlist[['figures']][['cn']][['soilcn']] +
xlab('Inv.-Ref. CWM leaf C:N') + ylab('Soil C:N effect size') + ggtitle('d'),
ncol=2
)
dev.off()
newfilename<-"DIFFreg_Nfix.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*2, height = fig.height*2)
grid.arrange(
DIFFlist_Nfix[['figures']][['litterpercN']][['toti']] +
xlab('Inv.-Ref. CWM litter %N') + ylab('Total inorg. N effect size') +
ggtitle('a') + guides(color=FALSE),
DIFFlist_Nfix[['figures']][['littercn']][['toti']] +
xlab('Inv.-Ref. CWM litter C:N') + ylab('Total inorg. N effect size') +
ggtitle('b')+ guides(color=FALSE),
DIFFlist_Nfix[['figures']][['cn']][['nminz']] +
xlab('Inv.-Ref. CWM leaf C:N') + ylab('Mineralization effect size') +
ggtitle('c')+ guides(color=FALSE),
DIFFlist_Nfix[['figures']][['cn']][['soilcn']] +
xlab('Inv.-Ref. CWM leaf C:N') + ylab('Soil C:N effect size') +
ggtitle('d')+ guides(color=FALSE),
ncol=2
)
dev.off()
newfilename<-"DIFF2reg_compare.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*2, height = fig.height*4)
grid.arrange(
DIFFlist[['figures']][['litterpercN']][['toti']] +
xlab('Inv.-Ref. CWM litter %N') + ylab('Total inorg. N effect size') +
ggtitle('a'),
DIFF2list[['figures']][['litterpercN']][['toti']] +
xlab('Inv. Sp. - Ref litter %N') + ylab('Total inorg. N effect size') +
ggtitle('b'),
DIFFlist[['figures']][['littercn']][['toti']] +
xlab('Inv.-Ref. CWM litter C : N') + ylab('Total inorg. N effect size') +
ggtitle('c'),
DIFF2list[['figures']][['littercn']][['toti']] +
xlab('Inv. Sp. - Ref litter C : N') + ylab('Total inorg. N effect size') +
ggtitle('d'),
DIFFlist[['figures']][['cn']][['nminz']] +
xlab('Inv.-Ref. CWM leaf C : N') + ylab('Mineralization effect size') +
ggtitle('e'),
DIFF2list[['figures']][['cn']][['nminz']] +
xlab('Inv. Sp. - Ref leaf C : N') + ylab('Mineralization effect size') +
ggtitle('f'),
DIFFlist[['figures']][['cn']][['soilcn']] +
xlab('Inv.-Ref. CWM leaf C : N') + ylab('Soil C : N effect size') +
ggtitle('g'),
DIFF2list[['figures']][['cn']][['soilcn']] +
xlab('Inv. Sp. - Ref leaf C : N') + ylab('Soil C : N effect size') +
ggtitle('h'),
ncol=2
)
dev.off()
newfilename<-"DIFF2reg_compare_Nfix.pdf"
pdf(paste(figuresPath,newfilename, sep='/'), width = fig.width*2, height = fig.height*4)
grid.arrange(
DIFFlist_Nfix[['figures']][['litterpercN']][['toti']] +
xlab('Inv.-Ref. CWM litter %N') + ylab('Total inorg. N effect size') +
ggtitle('a')+ guides(color=FALSE),
DIFF2list_Nfix[['figures']][['litterpercN']][['toti']] +
xlab('Inv. Sp. - Ref litter %N') + ylab('Total inorg. N effect size') +
ggtitle('b')+ guides(color=FALSE),
DIFFlist_Nfix[['figures']][['littercn']][['toti']] +
xlab('Inv.-Ref. CWM litter C : N') + ylab('Total inorg. N effect size') +
ggtitle('c')+ guides(color=FALSE),
DIFF2list_Nfix[['figures']][['littercn']][['toti']] +
xlab('Inv. Sp. - Ref litter C : N') + ylab('Total inorg. N effect size') +
ggtitle('d')+ guides(color=FALSE),
DIFFlist_Nfix[['figures']][['cn']][['nminz']] +
xlab('Inv.-Ref. CWM leaf C : N') + ylab('Mineralization effect size') +
ggtitle('e')+ guides(color=FALSE),
DIFF2list_Nfix[['figures']][['cn']][['nminz']] +
xlab('Inv. Sp. - Ref leaf C : N') + ylab('Mineralization effect size') +
ggtitle('f')+ guides(color=FALSE),
DIFFlist_Nfix[['figures']][['cn']][['soilcn']] +
xlab('Inv.-Ref. CWM leaf C : N') + ylab('Soil C : N effect size') +
ggtitle('g')+ guides(color=FALSE),
DIFF2list_Nfix[['figures']][['cn']][['soilcn']] +
xlab('Inv. Sp. - Ref leaf C : N') + ylab('Soil C : N effect size') +
ggtitle('h')+ guides(color=FALSE),
ncol=2
)
dev.off()
